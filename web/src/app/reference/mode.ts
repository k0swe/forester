/**
 * An amateur radio mode and possibly a submode. Defined in ADIF 3.1.1.
 */
export class Mode {
  mode: string;
  submode?: string;
}

/**
 * All of the legal amateur radio mode/submode combinations defined in
 * ADIF 3.1.1 sections "III.B.9 Mode Enumeration" and "III.B.10 Submode
 * Enumeration". Only finds exact matches of either the mode or submode.
 */
export class Modes {
  public static readonly modeList: Array<Mode> = [
    { mode: 'AM' },
    { mode: 'ARDOP' },
    { mode: 'ATV' },
    { mode: 'C4FM' },
    { mode: 'CHIP' },
    { mode: 'CHIP', submode: 'CHIP64' },
    { mode: 'CHIP', submode: 'CHIP128' },
    { mode: 'CLO' },
    { mode: 'CONTESTI' },
    { mode: 'CW' },
    { mode: 'CW', submode: 'PCW' },
    { mode: 'DIGITALVOICE' },
    { mode: 'DOMINO' },
    { mode: 'DOMINO', submode: 'DOMINOEX' },
    { mode: 'DOMINO', submode: 'DOMINOF' },
    { mode: 'DSTAR' },
    { mode: 'FAX' },
    { mode: 'FM' },
    { mode: 'FSK441' },
    { mode: 'FT8' },
    { mode: 'HELL' },
    { mode: 'HELL', submode: 'FMHELL' },
    { mode: 'HELL', submode: 'FSKHELL' },
    { mode: 'HELL', submode: 'HELL80' },
    { mode: 'HELL', submode: 'HFSK' },
    { mode: 'HELL', submode: 'PSKHELL' },
    { mode: 'ISCAT' },
    { mode: 'ISCAT', submode: 'ISCAT-A' },
    { mode: 'ISCAT', submode: 'ISCAT-B' },
    { mode: 'JT4' },
    { mode: 'JT4', submode: 'JT4A' },
    { mode: 'JT4', submode: 'JT4B' },
    { mode: 'JT4', submode: 'JT4C' },
    { mode: 'JT4', submode: 'JT4D' },
    { mode: 'JT4', submode: 'JT4E' },
    { mode: 'JT4', submode: 'JT4F' },
    { mode: 'JT4', submode: 'JT4G' },
    { mode: 'JT6M' },
    { mode: 'JT9' },
    { mode: 'JT9', submode: 'JT9-1' },
    { mode: 'JT9', submode: 'JT9-2' },
    { mode: 'JT9', submode: 'JT9-5' },
    { mode: 'JT9', submode: 'JT9-10' },
    { mode: 'JT9', submode: 'JT9-30' },
    { mode: 'JT9', submode: 'JT9A' },
    { mode: 'JT9', submode: 'JT9B' },
    { mode: 'JT9', submode: 'JT9C' },
    { mode: 'JT9', submode: 'JT9D' },
    { mode: 'JT9', submode: 'JT9E' },
    { mode: 'JT9', submode: 'JT9E FAST' },
    { mode: 'JT9', submode: 'JT9F' },
    { mode: 'JT9', submode: 'JT9F FAST' },
    { mode: 'JT9', submode: 'JT9G' },
    { mode: 'JT9', submode: 'JT9G FAST' },
    { mode: 'JT9', submode: 'JT9H' },
    { mode: 'JT9', submode: 'JT9H FAST' },
    { mode: 'JT44' },
    { mode: 'JT65' },
    { mode: 'JT65', submode: 'JT65A' },
    { mode: 'JT65', submode: 'JT65B' },
    { mode: 'JT65', submode: 'JT65B2' },
    { mode: 'JT65', submode: 'JT65C' },
    { mode: 'JT65', submode: 'JT65C2' },
    { mode: 'MFSK' },
    { mode: 'MFSK', submode: 'FSQCALL' },
    { mode: 'MFSK', submode: 'FST4' },
    { mode: 'MFSK', submode: 'FT4' },
    { mode: 'MFSK', submode: 'JS8' },
    { mode: 'MFSK', submode: 'MFSK4' },
    { mode: 'MFSK', submode: 'MFSK8' },
    { mode: 'MFSK', submode: 'MFSK11' },
    { mode: 'MFSK', submode: 'MFSK16' },
    { mode: 'MFSK', submode: 'MFSK22' },
    { mode: 'MFSK', submode: 'MFSK31' },
    { mode: 'MFSK', submode: 'MFSK32' },
    { mode: 'MFSK', submode: 'MFSK64' },
    { mode: 'MFSK', submode: 'MFSK128' },
    { mode: 'MSK144' },
    { mode: 'MT63' },
    { mode: 'OLIVIA' },
    { mode: 'OLIVIA', submode: 'OLIVIA 4/125' },
    { mode: 'OLIVIA', submode: 'OLIVIA 4/250' },
    { mode: 'OLIVIA', submode: 'OLIVIA 8/250' },
    { mode: 'OLIVIA', submode: 'OLIVIA 8/500' },
    { mode: 'OLIVIA', submode: 'OLIVIA 16/500' },
    { mode: 'OLIVIA', submode: 'OLIVIA 16/1000' },
    { mode: 'OLIVIA', submode: 'OLIVIA 32/1000' },
    { mode: 'OPERA' },
    { mode: 'OPERA', submode: 'OPERA-BEACON' },
    { mode: 'OPERA', submode: 'OPERA-QSO' },
    { mode: 'PAC' },
    { mode: 'PAC', submode: 'PAC2' },
    { mode: 'PAC', submode: 'PAC3' },
    { mode: 'PAC', submode: 'PAC4' },
    { mode: 'PAX' },
    { mode: 'PAX', submode: 'PAX2' },
    { mode: 'PKT' },
    { mode: 'PSK' },
    { mode: 'PSK', submode: 'FSK31' },
    { mode: 'PSK', submode: 'PSK10' },
    { mode: 'PSK', submode: 'PSK31' },
    { mode: 'PSK', submode: 'PSK63' },
    { mode: 'PSK', submode: 'PSK63F' },
    { mode: 'PSK', submode: 'PSK125' },
    { mode: 'PSK', submode: 'PSK250' },
    { mode: 'PSK', submode: 'PSK500' },
    { mode: 'PSK', submode: 'PSK1000' },
    { mode: 'PSK', submode: 'PSKAM10' },
    { mode: 'PSK', submode: 'PSKAM31' },
    { mode: 'PSK', submode: 'PSKAM50' },
    { mode: 'PSK', submode: 'PSKFEC31' },
    { mode: 'PSK', submode: 'QPSK31' },
    { mode: 'PSK', submode: 'QPSK63' },
    { mode: 'PSK', submode: 'QPSK125' },
    { mode: 'PSK', submode: 'QPSK250' },
    { mode: 'PSK', submode: 'QPSK500' },
    { mode: 'PSK', submode: 'SIM31' },
    { mode: 'PSK2K' },
    { mode: 'Q15' },
    { mode: 'QRA64' },
    { mode: 'QRA64', submode: 'QRA64A' },
    { mode: 'QRA64', submode: 'QRA64B' },
    { mode: 'QRA64', submode: 'QRA64C' },
    { mode: 'QRA64', submode: 'QRA64D' },
    { mode: 'QRA64', submode: 'QRA64E' },
    { mode: 'ROS' },
    { mode: 'ROS', submode: 'ROS-EME' },
    { mode: 'ROS', submode: 'ROS-HF' },
    { mode: 'ROS', submode: 'ROS-MF' },
    { mode: 'RTTY' },
    { mode: 'RTTY', submode: 'ASCI' },
    { mode: 'RTTYM' },
    { mode: 'SSB' },
    { mode: 'SSB', submode: 'LSB' },
    { mode: 'SSB', submode: 'USB' },
    { mode: 'SSTV' },
    { mode: 'T10' },
    { mode: 'THOR' },
    { mode: 'THRB' },
    { mode: 'THRB', submode: 'THRBX' },
    { mode: 'TOR' },
    { mode: 'TOR', submode: 'AMTORFEC' },
    { mode: 'TOR', submode: 'GTOR' },
    { mode: 'V4' },
    { mode: 'VOI' },
    { mode: 'WINMOR' },
    { mode: 'WSPR' },
  ];

  public static readonly modeNames: Array<string> = Modes.modeList
    .map((m) => (m.submode ? m.submode : m.mode))
    .sort();

  public static findMode(name: string): Mode | null {
    for (const m of Modes.modeList) {
      if (m.submode && m.submode === name) {
        return m;
      } else if (m.mode === name) {
        return m;
      }
    }
    return null;
  }
}
